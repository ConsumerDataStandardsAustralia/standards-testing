{
  "schema": "https://cds.gov.au/cdr-test-schema.1.0.0.json",
  "fileVersion": "2.0.0",
  "standardsVersion": "1.18.0",
  "title": "The CDR Test Documentation",
  "description": "This documentation has been  created by the DSB to assist participants in the development of compliant APIs",
  "changeLogUrl": "https://github.com/ConsumerDataStandardsAustralia/standards-testing/raw/v2.0.0/CDR%20Test%20Documentation%20CHANGE%20LOG.xlsx",
  "githubRepoUrl": "https://github.com/ConsumerDataStandardsAustralia/standards-testing",
  "assertions": {
    "A.CAA.0001": {
      "id": "A.CAA.0001",
      "title": "Validate schema - GetStatus",
      "given": [
        "a request is made to obtain a health check status for the implementation "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the ResponseCommonDiscoveryStatus schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSresponsecommondiscoverystatus"
        }
      ],
      "negative": false
    },
    "A.CAA.0002": {
      "id": "A.CAA.0002",
      "title": "Validate schema - GetOutage",
      "given": [
        "a request is made to obtain a list of scheduled outages"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the ResponseDiscoveryOutageList schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSresponsediscoveryoutageslist"
        }
      ],
      "negative": false
    },
    "A.CAC.0001": {
      "id": "A.CAC.0001",
      "title": "Validate schema - ResponseCommonCustomer",
      "given": [
        "the request to call the API is formatted correctly"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the ResponseCommonCustomer schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSresponsecommoncustomer"
        }
      ],
      "negative": false
    },
    "A.CAC.0002": {
      "id": "A.CAC.0002",
      "title": "Validate schema - ResponseCommonCustomerDetailV2",
      "given": [
        "the request to call the API is formatted correctly"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the ResponseCommonCustomerDetailV2 schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSresponsecommoncustomerdetailv2"
        }
      ],
      "negative": false
    },
    "A.EAA.0001": {
      "id": "A.EAA.0001",
      "title": "Validate schema - EnergyAccountListResponse",
      "given": [
        "the request to call the API is formatted correctly by the ADR"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the EnergyAccountListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyaccountlistresponse"
        }
      ],
      "negative": false
    },
    "A.EAA.0002": {
      "id": "A.EAA.0002",
      "title": "Validate account and schema - EnergyAccountDetailResponse",
      "given": [
        "the {accountID} is included ",
        "AND the {accountId} value is valid "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the EnergyAccountDetailResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyaccountdetailresponse"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false
    },
    "A.EAA.0003": {
      "id": "A.EAA.0003",
      "title": "Validate account identifier - invalid value",
      "given": [
        "the {accountId} is included ",
        "AND the requested account is permanently unavailable. (No subsequent request for the account will be successful.)"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 404",
          " the response body has ErrorListReponse object",
          " error code is \"Authorisation/InvalidEnergyAccount\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-404-invalid-energy-account"
        }
      ],
      "negative": false
    },
    "A.EAA.0004": {
      "id": "A.EAA.0004",
      "title": "Validate account identifier - unavailable account",
      "given": [
        "the {accoundId} is included",
        "AND the requested account is temporarily unavailable. (Subsequent requests for the account may be successful.)"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 404",
          " the response body has ErrorListReponse object",
          " error code is \"Authorisation/UnavailableEnergyAccount\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-404-unavailable-energy-account"
        }
      ],
      "negative": false
    },
    "A.EAA.0005": {
      "id": "A.EAA.0005",
      "title": "validate account and schema - EnergyPaymentScheduleResponse",
      "given": [
        "the {accountID} is included ",
        "AND the {accountId} value is valid "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the EnergyPaymentScheduleResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergypaymentscheduleresponse"
        }
      ],
      "negative": false
    },
    "A.EAA.0006": {
      "id": "A.EAA.0006",
      "title": "validate account and schema -EnergyConcessionsResponse",
      "given": [
        "the {accountID} is included ",
        "AND the {accountId} value is valid "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the EnergyConcessionsResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyconcessionsresponse"
        }
      ],
      "negative": false
    },
    "A.EAR.0001": {
      "id": "A.EAR.0001",
      "title": "Validate service point and schema - EnergyServicePointDetailResponse",
      "given": [
        "the {servicePointId} is included ",
        "AND the {servicePointId} value is valid "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the EnergyServicePointDetailResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyservicepointdetailresponse"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false
    },
    "A.EAR.0002": {
      "id": "A.EAR.0002",
      "title": "Validate service point - invalid value",
      "given": [
        "the {servicePointId} is included ",
        "AND the requested service point is permanently unavailable. (No subsequent request for the service point will be successful.)"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 404",
          " the response body has ErrorListReponse object",
          " error code is \"Authorisation/InvalidServicePoint\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false
    },
    "A.EAR.0003": {
      "id": "A.EAR.0003",
      "title": "Validate service point - unavailable",
      "given": [
        "the {servicePointId} is included",
        "AND the requested service point is temporarily unavailable. (Subsequent requests for the service point may be successful.)"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 404",
          " the response body has ErrorListReponse object",
          " error code is \"Authorisation/UnavailableServicePoint\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false
    },
    "A.EAR.0004": {
      "id": "A.EAR.0004",
      "title": "Validate schema - EnergyServicePointListReponse",
      "given": [
        "the request to call the API is formatted correctly"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 200",
          " the response body complies with the EnergyServiceListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyservicepointlistresponse"
        }
      ],
      "negative": false
    },
    "A.EAR.0005": {
      "id": "A.EAR.0005",
      "title": "Validate service point and schema - EnergyUsageListResponse",
      "given": [
        "the {servicePointId} is included",
        "AND the {servicePointId} value is valid ",
        "AND the request is formatted correctly"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code of 200",
          " the response body complies with the EnergyUsageListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyusagelistresponse"
        }
      ],
      "negative": false
    },
    "A.EAR.0006": {
      "id": "A.EAR.0006",
      "title": "Validate servicePointIdList body and schema - EnergyUsageListResponse",
      "given": [
        "the request payload to call the API is formatted correctly ",
        "AND contains the mandatory fields"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 200",
          " the response body complies with the EnergyUsageListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyusagelistresponse"
        }
      ],
      "negative": false
    },
    "A.EAR.0007": {
      "id": "A.EAR.0007",
      "title": "Validate service point and schema - EnergyDerDetailResponse",
      "given": [
        "the {servicePointId} is included ",
        "AND the {servicePointId} value is valid "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the EnergyDerDetailResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false
    },
    "A.EAR.0008": {
      "id": "A.EAR.0008",
      "title": "Validate servicePointIdList body and schema - EnergyDerListResponse",
      "given": [
        "the request payload to call the API is formatted correctly ",
        "AND contains the mandatory fields"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 200",
          " the response body complies with the EnergyDerListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyderlistresponse"
        }
      ],
      "negative": false
    },
    "A.EAR.0009": {
      "id": "A.EAR.0009",
      "title": "Validate servicePointIdList - invalid body values",
      "given": [
        "the request payload does not contain the required fields",
        "OR the request payload is NOT well formatted"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 422",
          " the response body has ErrorListReponse",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyusagelistresponse"
        }
      ],
      "negative": false
    },
    "A.EAR.0010": {
      "id": "A.EAR.0010",
      "title": "Validate schema - \tEnergyUsageListResponse",
      "given": [
        "the request to call the API is formatted correctly"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 200",
          " the response body complies with the EnergyUsageListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyusagelistresponse"
        }
      ],
      "negative": false
    },
    "A.EAR.0011": {
      "id": "A.EAR.0011",
      "title": "Validate schema - EnergyDerListResponse",
      "given": [
        "the request to call the API is formatted correctly"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 200",
          " the response body complies with the EnergyDerListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyderlistresponse"
        }
      ],
      "negative": false
    },
    "A.EAS.0001": {
      "id": "A.EAS.0001",
      "title": "Validate service point and schema - EnergyServicePointDetailResponse",
      "given": [
        "the {servicePointId} is included ",
        "AND the {servicePointId} value is valid "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the EnergyServicePointDetailResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyservicepointdetailresponse"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false
    },
    "A.EAS.0002": {
      "id": "A.EAS.0002",
      "title": "Validate service point - invalid NMI value",
      "given": [
        "the {servicePointId} is included ",
        "AND the requested service point is permanently unavailable. No subsequent request for the service point will be successful."
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 404",
          " the response body has ErrorListReponse object",
          " error code is \"Authorisation/InvalidServicePoint\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false
    },
    "A.EAS.0003": {
      "id": "A.EAS.0003",
      "title": "Validate service point - unavailable NMI",
      "given": [
        "the {servicePointId} is included ",
        "AND the requested service point is temporarily unavailable. Subsequent requests for the service point may be successful."
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 404",
          " the response body has ErrorListReponse object",
          " error code is \"Authorisation/UnavailableServicePoint\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false
    },
    "A.EAS.0004": {
      "id": "A.EAS.0004",
      "title": "Validate schema - EnergyServicePointListReponse",
      "given": [
        "the request to call the API is formatted correctly"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 200",
          " the response body complies with the EnergyServiceListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyservicepointlistresponse"
        }
      ],
      "negative": false
    },
    "A.EAS.0005": {
      "id": "A.EAS.0005",
      "title": "Validate service point and schema - EnergyUsageListResponse",
      "given": [
        "the {servicePointId} is included ",
        "AND the {servicePointId} value is valid ",
        "AND the request is formatted correctly"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code of 200",
          " the response body complies with the EnergyUsageListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyusagelistresponse"
        }
      ],
      "negative": false
    },
    "A.EAS.0006": {
      "id": "A.EAS.0006",
      "title": "Validate servicePointIdList body and schema - EnergyUsageListResponse",
      "given": [
        "the request payload to call the API is formatted correctly ",
        "AND contains the mandatory fields"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 200",
          " the response body complies with the EnergyUsageListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyusagelistresponse"
        }
      ],
      "negative": false
    },
    "A.EAS.0007": {
      "id": "A.EAS.0007",
      "title": "Validate service point and schema - EnergyDerDetailResponse",
      "given": [
        "the {servicePointId} is included ",
        "AND the {servicePointId} value is valid "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 200",
          " the response body complies with the EnergyDerDetailResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false
    },
    "A.EAS.0008": {
      "id": "A.EAS.0008",
      "title": "Validate servicePointIdList body and schema - EnergyDerListResponse",
      "given": [
        "the request payload to call the API is formatted correctly ",
        "AND contains the mandatory fields"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 200",
          " the response body complies with the EnergyDerListResponse schema"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSenergyderlistresponse"
        }
      ],
      "negative": false
    },
    "A.EAS.0009": {
      "id": "A.EAS.0009",
      "title": "Validate servicePointIdList - invalid body values",
      "given": [
        "the request payload does not contain the required fields",
        "OR the request payload is NOT well formatted"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 400",
          " the response body complies with the ErrorListReponse schema",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSerrorlistresponse"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false
    },
    "A.EAS.0010": {
      "id": "A.EAS.0010",
      "title": "Validate servicePointIdList - invalid servicePointId in body ",
      "given": [
        "the request payload contains an invalid servicePointID "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 422",
          " the response body complies with the ErrorListReponse schema",
          " error code is \"Authorisation/InvalidServicePoint\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSerrorlistresponse"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false
    },
    "A.EAS.0011": {
      "id": "A.EAS.0011",
      "title": "Validate servicePointIdList - unavailable servicePointId in body ",
      "given": [
        "the request payload contains a valid servicePointID that is unavailable"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status code 422",
          " the response body complies with the ErrorListReponse schema",
          " error code is \"Authorisation/UnavailableServicePoint\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#tocSerrorlistresponse"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false
    },
    "A.ZAA.0001": {
      "id": "A.ZAA.0001",
      "title": "Validate pagination - LinksPaginated ",
      "given": [
        "the page parameter is included in a GET request",
        "AND the page value is a number and page-size is [1..1000,null]"
      ],
      "when": [
        "a response is returned",
        "AND the response has a status of 200"
      ],
      "then": {
        "and": [
          "the nominated <page number> is returned",
          " the \"first\" link has page=1",
          " the \"last\" link is greater than or equal to 1",
          " the \"self\" link has page=<page number>",
          " the \"prev\" link has page equal to 1 or <page number> - 1",
          " the \"prev\" link has page equal to \"last\" or <page number> + 1",
          " \"meta\"/\"totalPages\" is greater than or equal to <page number>",
          " \"meta\"/\"totalRecords\" is greater than or equal to <page number> * <page size>"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#pagination"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0002": {
      "id": "A.ZAA.0002",
      "title": "Validate pagination - Invalid page size value",
      "given": [
        "the <page-size> parameter is specified",
        "AND the value for <page-size> is outside the range [1..1000]",
        "OR the <page-size> is a not a positive integer"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/InvalidPageSize\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0003": {
      "id": "A.ZAA.0003",
      "title": "Validate pagination - Non-numeric <page>",
      "given": [
        "the <page> parameter is included ",
        "AND the <page> is a not a positive integer"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0004": {
      "id": "A.ZAA.0004",
      "title": "Validate pagination - Max record limit exceeded",
      "given": [
        "the <page> parameter is included",
        "AND the <page> value is greater than the number of pages available "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 422",
          " the response body has ErrorListReponse object",
          " the error code is \"Field/InvalidPage\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0005": {
      "id": "A.ZAA.0005",
      "title": "Validate pagination - Non-numeric <page-size>",
      "given": [
        "the <page-size> parameter is included ",
        "AND the page size parameter value is not a positive integer (number)"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0006": {
      "id": "A.ZAA.0006",
      "title": "Validate version - valid version number [x-v]",
      "given": [
        "the <x-v> header is included ",
        "AND the value for the <x-v> is a positive integer"
      ],
      "when": [
        "a response is returned",
        "AND the response has a status of 200"
      ],
      "then": {
        "and": [
          " <x-v> is in the response header",
          " <x-v> is a positive integer"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0007": {
      "id": "A.ZAA.0007",
      "title": "Validate version - invalid version value [x-v]",
      "given": [
        "the version parameter is included ",
        "AND the version value is not a valid number is [-1,0,1001]"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0008": {
      "id": "A.ZAA.0008",
      "title": "Validate version - invalid [x-v] format",
      "given": [
        "the version parameter is included",
        "AND the version value is not a valid number is an alpha (e.g. \"foo\")"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0009": {
      "id": "A.ZAA.0009",
      "title": "Validate version - unsupported version without <x-min-v>",
      "given": [
        "the <x-v>  is included in a  request header",
        "AND <x-min-v> is NOT included",
        "AND the request version <x-v> is not supported"
      ],
      "when": [
        "and a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 406",
          " the response body has ErrorListReponse object",
          " error code is \"Header/UnsupportedVersion\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0010": {
      "id": "A.ZAA.0010",
      "title": "Validate version - unsupported version with <x-min-v>",
      "given": [
        "the <x-v>  is included in a  request header",
        "AND  <x-min-v>  is included",
        "AND no version between <x-v> and <x-min-v> is supported"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 406",
          " the response body has ErrorListReponse object",
          " error code is \"Header/UnsupportedVersion\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0011": {
      "id": "A.ZAA.0011",
      "title": "Validate version - <x-min-v> is provided",
      "given": [
        "the <x-min-v> header is included ",
        "AND the value for the <x-min-v>  is a positive integer"
      ],
      "when": [
        "a response is returned",
        "AND the response has a status of 200"
      ],
      "then": {
        "and": [
          "<x-v> is in the response header",
          "  <x-v> = [<x-min-v>, <x-v>]",
          " <x-v> is a positive integer"
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0012": {
      "id": "A.ZAA.0012",
      "title": "Validate minimum version - invalid <x-min-v> format",
      "given": [
        "the <x-min-v> header is included ",
        "AND the <x-min-v> is a not a positive integer"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0013": {
      "id": "A.ZAA.0013",
      "title": "Validate FAPI Interaction ID - included in request",
      "given": [
        "the <x-fapi-interaction-id> is included in the header of the request",
        "AND the <x-fapi-interaction-id> is in a valid format "
      ],
      "when": [
        "a response is returned"
      ],
      "then": "the Data Holder has returned the <x-fapi-interaction-id> from the request in the response header",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0014": {
      "id": "A.ZAA.0014",
      "title": "Validate FAPI Interaction ID - not in request",
      "given": [
        "the <x-fapi-interaction-id> is NOT included in the header of the request"
      ],
      "when": [
        "a response is returned"
      ],
      "then": "the Data Holder has returned an <x-fapi-interaction-id> in the response header",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0015": {
      "id": "A.ZAA.0015",
      "title": "Validate FAPI Interaction ID - invalid format",
      "given": [
        "the <x-fapi-interaction-id> is included ",
        "AND the <x-fapi-interaction-id> is not in a valid format "
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        },
        {
          "uri": "https://datatracker.ietf.org/doc/html/rfc4122"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0016": {
      "id": "A.ZAA.0016",
      "title": "Validate FAPI Auth date - missing from header",
      "given": [
        "the API requires authentication",
        "AND the <x-fapi-auth-date> is NOT present  in the request header"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/missing\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        },
        {
          "uri": "https://openid.net/specs/openid-financial-api-part-1-ID2.html"
        },
        {
          "uri": "https://datatracker.ietf.org/doc/html/rfc7231#page-90"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0017": {
      "id": "A.ZAA.0017",
      "title": "Validate FAPI Auth date - invalid format",
      "given": [
        "the API requires authentication",
        "AND the <x-fapi-auth-date> is in the request header",
        "AND is NOT in a valid format"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        },
        {
          "uri": "https://openid.net/specs/openid-financial-api-part-1-ID2.html"
        },
        {
          "uri": "https://datatracker.ietf.org/doc/html/rfc7231#page-90"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0018": {
      "id": "A.ZAA.0018",
      "title": "No <x-fapi-auth-date> in header (SR specific)",
      "given": [
        "the API requires authentication ",
        "AND the call is from a DH to a SDH"
      ],
      "when": [
        "a response is returned",
        "AND the response has a status of 200"
      ],
      "then": "the <x-fapi-auth-date> is NOT present in the response header",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0019": {
      "id": "A.ZAA.0019",
      "title": "Validate FAPI Customer IP Address - missing from header",
      "given": [
        "the API requires authentication",
        "AND the customer is present",
        "AND the <x-fapi-customer-ip-address> is NOT present in the request header"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/Missing\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#authentication-flows"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0020": {
      "id": "A.ZAA.0020",
      "title": "Validate FAPI Customer IP Address - invalid format",
      "given": [
        "the API requires authentication",
        "AND the <x-fapi-customer-ip-address> is in present the request header",
        "AND is NEITHER in a valid IPv4 or IPv6 format"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#authentication-flows"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0021": {
      "id": "A.ZAA.0021",
      "title": "No <x-fapi-customer-ip-address> in header (SR specific)",
      "given": [
        "the call is from a DH to a SDH"
      ],
      "when": [
        "a response is returned"
      ],
      "then": "the <x-fapi-customer-ip-address> is NOT present in the response header",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0022": {
      "id": "A.ZAA.0022",
      "title": "Validate the client headers - missing from header",
      "given": [
        "the API requires authentication",
        "AND the <x-cds-client-headers> is mandatory",
        "AND the <x-cds-client-headers> is NOT present in the request header"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/missing\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#authentication-flows"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#common-field-types"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0023": {
      "id": "A.ZAA.0023",
      "title": "Validate the client headers - invalid format",
      "given": [
        "the <x-cds-client-headers>  present the request header",
        "AND is Not Base64 encoded"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-headers"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#authentication-flows"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#common-field-types"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0024": {
      "id": "A.ZAA.0024",
      "title": "No <x-cds-client-header> in header (SR specific)",
      "given": [
        "the call is from a DH to a SDH"
      ],
      "when": [
        "a response is returned"
      ],
      "then": "the <x-cds-client-header> is NOT present in the response header",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0025": {
      "id": "A.ZAA.0025",
      "title": "CDS arrangement id - missing from header (SR specific)",
      "given": [
        "the call is from a DH to a SDH",
        "AND the <x-cds-arrangement> is NOT present in the request header"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/Missing\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#identifiers-and-subject-types"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0026": {
      "id": "A.ZAA.0026",
      "title": "CDS arrangement id - present but invalid (SR specific)",
      "given": [
        "the call is from a DH to a SDH"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Header/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#energy"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#identifiers-and-subject-types"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0027": {
      "id": "A.ZAA.0027",
      "title": "Validate the Oldest Date parameter - valid format",
      "given": [
        "the <oldest-date> is included as a query parameter",
        "AND the <oldest-date> is in a valid DateString format"
      ],
      "when": [
        "a response is returned",
        "AND the response has a status of 200"
      ],
      "then": "the data is constrained by the date supplied",
      "references": [],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0028": {
      "id": "A.ZAA.0028",
      "title": "Validation the Oldest Date parameter - invalid format",
      "given": [
        "the <oldest-date> is included as a query parameter",
        "AND the <oldest-date> is not in a DateString valid format"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0029": {
      "id": "A.ZAA.0029",
      "title": "Validate the Newest Date parameter - valid format",
      "given": [
        "the <newest-date> is included as a query parameter",
        "AND the <newest-date> is in a valid DateString format"
      ],
      "when": [
        "a response is returned",
        "AND the response has a status of 200"
      ],
      "then": "the data is constrained by the date supplied",
      "references": [],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0030": {
      "id": "A.ZAA.0030",
      "title": "Validation the Newest Date parameter - invalid format",
      "given": [
        "the <newest-date> is included as a query parameter",
        "AND the <newest-date> is not in a valid DateString format"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    },
    "A.ZAA.0031": {
      "id": "A.ZAA.0031",
      "title": "Validation of the POST body - malformed body",
      "given": [
        "the request is a POST request",
        "AND the request body is not in a valid JSON format, i.e. it is malformed"
      ],
      "when": [
        "a response is returned"
      ],
      "then": {
        "and": [
          "the response has a status of 400",
          " the response body has ErrorListReponse object",
          " error code is \"Field/Invalid\""
        ]
      },
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#error-codes"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#http-response-codes"
        }
      ],
      "negative": false,
      "severity": "FAIL"
    }
  },
  "testCases": {
    "T.CAA.0001": {
      "id": "T.CAA.0001",
      "title": "Get Status with a valid version",
      "description": "Obtain a health check status for the implementation",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-status"
        }
      ],
      "negative": true,
      "preConditions": [
        "Value <x-v>  is set to a version supported by the DH"
      ],
      "purpose": "Test API with a valid version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/status"
        }
      ],
      "assertions": [
        "A.CAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011"
      ]
    },
    "T.CAA.0002": {
      "id": "T.CAA.0002",
      "title": "Get Status - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-status"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/status"
        }
      ],
      "assertions": [
        "A.ZAA.0007"
      ]
    },
    "T.CAA.0003": {
      "id": "T.CAA.0003",
      "title": "Get Status - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-status"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid"
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/status"
        }
      ],
      "assertions": [
        "A.ZAA.0008"
      ]
    },
    "T.CAA.0004": {
      "id": "T.CAA.0004",
      "title": "Get Status - unsupported version without <x-min-v> included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-status"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/status"
        }
      ],
      "assertions": [
        "A.ZAA.0009"
      ]
    },
    "T.CAA.0005": {
      "id": "T.CAA.0005",
      "title": "Get Status - unsupported version when <x-min-v> is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-status"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/status"
        }
      ],
      "assertions": [
        "A.ZAA.0010"
      ]
    },
    "T.CAA.0006": {
      "id": "T.CAA.0006",
      "title": "Get Status - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-status"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/status"
        }
      ],
      "assertions": [
        "A.ZAA.0012"
      ]
    },
    "T.CAA.0007": {
      "id": "T.CAA.0007",
      "title": "Get Outages with a valid version",
      "description": "Obtain a list of scheduled outages for the implementation",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-outages"
        }
      ],
      "negative": true,
      "preConditions": [
        "Value <x-v> is set to a version supported by the DH"
      ],
      "purpose": "Test API with a valid version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/outages"
        }
      ],
      "assertions": [
        "A.CAA.0002",
        "A.ZAA.0006",
        "A.ZAA.0011"
      ]
    },
    "T.CAA.0008": {
      "id": "T.CAA.0008",
      "title": "Get Outages - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-outages"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/outages"
        }
      ],
      "assertions": [
        "A.ZAA.0007"
      ]
    },
    "T.CAA.0009": {
      "id": "T.CAA.0009",
      "title": "Get Outages - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-outages"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid"
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/outages"
        }
      ],
      "assertions": [
        "A.ZAA.0008"
      ]
    },
    "T.CAA.0010": {
      "id": "T.CAA.0010",
      "title": "Get Outages - unsupported version without <x-min-v> included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-outages"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/outages"
        }
      ],
      "assertions": [
        "A.ZAA.0009"
      ]
    },
    "T.CAA.0011": {
      "id": "T.CAA.0011",
      "title": "Get Outages - unsupported version when <x-min-v> is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-outages"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/outages"
        }
      ],
      "assertions": [
        "A.ZAA.0010"
      ]
    },
    "T.CAA.0012": {
      "id": "T.CAA.0012",
      "title": "Get Outages - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-outages"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /discovery/outages"
        }
      ],
      "assertions": [
        "A.ZAA.0012"
      ]
    },
    "T.CAC.0001": {
      "id": "T.CAC.0001",
      "title": "Get Customer",
      "description": "Obtain basic information on the customer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": true,
      "preConditions": [
        "The value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with valid version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.CAC.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0002": {
      "id": "T.CAC.0002",
      "title": "Get Customer - invalid version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0003": {
      "id": "T.CAC.0003",
      "title": "Get Customer - invalid version format",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0004": {
      "id": "T.CAC.0004",
      "title": "Get Customer - unsupported version without x-min-v included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0005": {
      "id": "T.CAC.0005",
      "title": "Get Customer - unsupported version when x-min-v is included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0006": {
      "id": "T.CAC.0006",
      "title": "Get Customer - invalid minimum version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-min-v> is a not a positive integer"
      ],
      "purpose": "Test API with invalid minimum version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0007": {
      "id": "T.CAC.0007",
      "title": "Get Customer - invalid FAPI Interaction ID format ",
      "description": "Ensure the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.CAC.0008": {
      "id": "T.CAC.0008",
      "title": "Get Customer - missing FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.CAC.0009": {
      "id": "T.CAC.0009",
      "title": "Get Customer -  invalid FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.CAC.0010": {
      "id": "T.CAC.0010",
      "title": "Get Customer - missing FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.CAC.0011": {
      "id": "T.CAC.0011",
      "title": "Get Customer - invalid FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.CAC.0012": {
      "id": "T.CAC.0012",
      "title": "Get Customer - missing CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.CAC.0013": {
      "id": "T.CAC.0013",
      "title": "Get Customer - invalid CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.CAC.0014": {
      "id": "T.CAC.0014",
      "title": "Get Customer Detail",
      "description": "Obtain detailed information on the authorised customer within the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": true,
      "preConditions": [
        "The value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with valid version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.CAC.0002",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0015": {
      "id": "T.CAC.0015",
      "title": "Get Customer Detail - invalid version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0016": {
      "id": "T.CAC.0016",
      "title": "Get Customer Detail - invalid version format",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0017": {
      "id": "T.CAC.0017",
      "title": "Get Customer Detail - unsupported version without x-min-v included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0018": {
      "id": "T.CAC.0018",
      "title": "Get Customer Detail - unsupported version when x-min-v is included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0019": {
      "id": "T.CAC.0019",
      "title": "Get Customer Detail - invalid minimum version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-min-v> is a not a positive integer"
      ],
      "purpose": "Test API with invalid minimum version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.CAC.0020": {
      "id": "T.CAC.0020",
      "title": "Get Customer Detail - invalid FAPI Interaction ID format ",
      "description": "Ensure the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.CAC.0021": {
      "id": "T.CAC.0021",
      "title": "Get Customer Detail - missing FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.CAC.0022": {
      "id": "T.CAC.0022",
      "title": "Get Customer Detail -  invalid FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.CAC.0023": {
      "id": "T.CAC.0023",
      "title": "Get Customer Detail - missing FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.CAC.0024": {
      "id": "T.CAC.0024",
      "title": "Get Customer Detail - invalid FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.CAC.0025": {
      "id": "T.CAC.0025",
      "title": "Get Customer Detail - missing CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.CAC.0026": {
      "id": "T.CAC.0026",
      "title": "Get Customer Detail - invalid CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-customer-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /common/customer/detail"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAA.0001": {
      "id": "T.EAA.0001",
      "title": "Get Energy Accounts - no pagination",
      "description": "Obtain the list of energy accounts available under the authorised consent ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.EAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0002": {
      "id": "T.EAA.0002",
      "title": "Get Energy Accounts - with pagination",
      "description": "Obtain the list of energy accounts available under the authorised con",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": true,
      "preConditions": [
        "<page-size> and <page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.EAA.0001",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0003": {
      "id": "T.EAA.0003",
      "title": "Get Energy Accounts - invalid page parameters",
      "description": "Ensure the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0004": {
      "id": "T.EAA.0004",
      "title": "Get Energy Accounts - unsupported version without x-min-v included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0005": {
      "id": "T.EAA.0005",
      "title": "Get Energy Accounts - invalid version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0006": {
      "id": "T.EAA.0006",
      "title": "Get Energy Accounts - invalid version format",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0007": {
      "id": "T.EAA.0007",
      "title": "Get Energy Accounts - unsupported version when x-min-v is included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0008": {
      "id": "T.EAA.0008",
      "title": "Get Energy Accounts - invalid FAPI Interaction ID format ",
      "description": "Ensure the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAA.0009": {
      "id": "T.EAA.0009",
      "title": "Get Energy Accounts - missing FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAA.0010": {
      "id": "T.EAA.0010",
      "title": "Get Energy Accounts -  invalid FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAA.0011": {
      "id": "T.EAA.0011",
      "title": "Get Energy Accounts - missing FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAA.0012": {
      "id": "T.EAA.0012",
      "title": "Get Energy Accounts - invalid FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAA.0013": {
      "id": "T.EAA.0013",
      "title": "Get Energy Accounts - missing CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAA.0014": {
      "id": "T.EAA.0014",
      "title": "Get Energy Accounts - invalid CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAA.0015": {
      "id": "T.EAA.0015",
      "title": "Get Energy Account Detail ",
      "description": "Obtain detailed information for a specific energy account",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {accountId} is set in the Path ",
        "AND value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with valid account and version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.EAA.0002",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0016": {
      "id": "T.EAA.0016",
      "title": "Get Energy Account Detail - invalid account id format",
      "description": "Ensure the endpoint returns accountId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {accountId} is set in the Path to a value that is invalid"
      ],
      "purpose": "Test API with an invalid accountId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.EAA.0003",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0017": {
      "id": "T.EAA.0017",
      "title": "Get Energy Account Detail - unavailable account id ",
      "description": "Ensure the endpoint returns accountId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {accountID} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable accountId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.EAA.0004",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0018": {
      "id": "T.EAA.0018",
      "title": "Get Energy Account Detail - unsupported version without x-min-v included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0019": {
      "id": "T.EAA.0019",
      "title": "Get Energy Account Detail - invalid version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0020": {
      "id": "T.EAA.0020",
      "title": "Get Energy Account Detail - invalid version format",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0021": {
      "id": "T.EAA.0021",
      "title": "Get Energy Account Detail - unsupported version when x-min-v is included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0022": {
      "id": "T.EAA.0022",
      "title": "Get Energy Account Detail - invalid FAPI Interaction ID format ",
      "description": "Ensure the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAA.0023": {
      "id": "T.EAA.0023",
      "title": "Get Energy Account Detail - missing FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAA.0024": {
      "id": "T.EAA.0024",
      "title": "Get Energy Account Detail -  invalid FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAA.0025": {
      "id": "T.EAA.0025",
      "title": "Get Energy Account Detail - missing FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAA.0026": {
      "id": "T.EAA.0026",
      "title": "Get Energy Account Detail - invalid FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAA.0027": {
      "id": "T.EAA.0027",
      "title": "Get Energy Account Detail - missing CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAA.0028": {
      "id": "T.EAA.0028",
      "title": "Get Energy Account Detail - invalid CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAA.0029": {
      "id": "T.EAA.0029",
      "title": "Get Agreed Payment Schedule",
      "description": "Obtain the agreed payment schedule and details, if any, for a specific energy account",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {accountId} is set in the Path ",
        "AND value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with valid account and version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.EAA.0005",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0030": {
      "id": "T.EAA.0030",
      "title": "Get Agreed Payment Schedule - invalid account id format",
      "description": "Ensure the endpoint returns accountId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {accountId} is set in the Path to a value that is invalid"
      ],
      "purpose": "Test API with an invalid accountId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.EAA.0003",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0031": {
      "id": "T.EAA.0031",
      "title": "Get Agreed Payment Schedule - unavailable account id ",
      "description": "Ensure the endpoint returns accountId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {accountID} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable accountId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.EAA.0004",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0032": {
      "id": "T.EAA.0032",
      "title": "Get Agreed Payment Schedule - unsupported version without x-min-v included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0033": {
      "id": "T.EAA.0033",
      "title": "Get Agreed Payment Schedule - invalid version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0034": {
      "id": "T.EAA.0034",
      "title": "Get Agreed Payment Schedule - invalid version format",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0035": {
      "id": "T.EAA.0035",
      "title": "Get Agreed Payment Schedule - unsupported version when x-min-v is included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0036": {
      "id": "T.EAA.0036",
      "title": "Get Agreed Payment Schedule - invalid FAPI Interaction ID format ",
      "description": "Ensure the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAA.0037": {
      "id": "T.EAA.0037",
      "title": "Get Agreed Payment Schedule - missing FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAA.0038": {
      "id": "T.EAA.0038",
      "title": "Get Agreed Payment Schedule -  invalid FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAA.0039": {
      "id": "T.EAA.0039",
      "title": "Get Agreed Payment Schedule - missing FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAA.0040": {
      "id": "T.EAA.0040",
      "title": "Get Agreed Payment Schedule - invalid FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAA.0041": {
      "id": "T.EAA.0041",
      "title": "Get Agreed Payment Schedule - missing CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAA.0042": {
      "id": "T.EAA.0042",
      "title": "Get Agreed Payment Schedule - invalid CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAA.0043": {
      "id": "T.EAA.0043",
      "title": "Get Concessions ",
      "description": "Obtain the details of any concessions or arrangements applied to a specific energy account",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {accountId} is set in the Path ",
        "AND value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with valid account and version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.EAA.0006",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0044": {
      "id": "T.EAA.0044",
      "title": "Get Concessions - invalid account id format",
      "description": "Ensure the endpoint returns accountId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {accountId} is set in the Path to a value that is invalid"
      ],
      "purpose": "Test API with an invalid accountId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.EAA.0003",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0045": {
      "id": "T.EAA.0045",
      "title": "Get Concessions - unavailable account id ",
      "description": "Ensure the endpoint returns accountId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {accountID} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable accountId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.EAA.0004",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0046": {
      "id": "T.EAA.0046",
      "title": "Get Concessions - unsupported version without x-min-v included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0047": {
      "id": "T.EAA.0047",
      "title": "Get Concessions - invalid version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0048": {
      "id": "T.EAA.0048",
      "title": "Get Concessions - invalid version format",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0049": {
      "id": "T.EAA.0049",
      "title": "Get Concessions - unsupported version when x-min-v is included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0050": {
      "id": "T.EAA.0050",
      "title": "Get Concessions - invalid FAPI Interaction ID format ",
      "description": "Ensure the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAA.0051": {
      "id": "T.EAA.0051",
      "title": "Get Concessions - missing FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAA.0052": {
      "id": "T.EAA.0052",
      "title": "Get Concessions - invalid FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAA.0053": {
      "id": "T.EAA.0053",
      "title": "Get Concessions - missing FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAA.0054": {
      "id": "T.EAA.0054",
      "title": "Get Concessions - invalid FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAA.0055": {
      "id": "T.EAA.0055",
      "title": "Get Concessions - missing CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAA.0056": {
      "id": "T.EAA.0056",
      "title": "Get Concessions - invalid CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAA.0057": {
      "id": "T.EAA.0057",
      "title": "Get Energy Accounts - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-accounts"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0058": {
      "id": "T.EAA.0058",
      "title": "Get Energy Account Detail - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-energy-account-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0059": {
      "id": "T.EAA.0059",
      "title": "Get Agreed Payment Schedule - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-agreed-payment-schedule"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/payment-schedule"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAA.0060": {
      "id": "T.EAA.0060",
      "title": "Get Concessions - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-concessions"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/concessions"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAB.0002": {
      "id": "T.EAB.0002",
      "title": "Get Balance for Energy Account - invalid account id format",
      "description": "Ensure the endpoint returns accountId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {accountId} is set in the Path to a value that is invalid"
      ],
      "purpose": "Test API with an invalid accountId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAB.0003": {
      "id": "T.EAB.0003",
      "title": "Get Balance for Energy Account - unavailable account id ",
      "description": "Ensure the endpoint returns accountId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {accountID} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable accountId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAB.0004": {
      "id": "T.EAB.0004",
      "title": "Get Balance for Energy Account - unsupported version without x-min-v included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAB.0005": {
      "id": "T.EAB.0005",
      "title": "Get Balance for Energy Account - invalid version value",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAB.0006": {
      "id": "T.EAB.0006",
      "title": "Get Balance for Energy Account - invalid version format",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAB.0007": {
      "id": "T.EAB.0007",
      "title": "Get Balance for Energy Account - unsupported version when x-min-v is included",
      "description": "Ensure the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAB.0008": {
      "id": "T.EAB.0008",
      "title": "Get Energy Account Detail - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAB.0009": {
      "id": "T.EAB.0009",
      "title": "Get Balance for Energy Account - invalid FAPI Interaction ID format ",
      "description": "Ensure the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAB.0010": {
      "id": "T.EAB.0010",
      "title": "Get Balance for Energy Account - missing FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAB.0011": {
      "id": "T.EAB.0011",
      "title": "Get Balance for Energy Account -  invalid FAPI Auth Date",
      "description": "Ensure the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAB.0012": {
      "id": "T.EAB.0012",
      "title": "Get Balance for Energy Account - missing FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAB.0013": {
      "id": "T.EAB.0013",
      "title": "Get Balance for Energy Account - invalid FAPI Customer IP Address",
      "description": "Ensure the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAB.0014": {
      "id": "T.EAB.0014",
      "title": "Get Balance for Energy Account - missing CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAB.0015": {
      "id": "T.EAB.0015",
      "title": "Get Balance for Energy Account - invalid CDS Client Header",
      "description": "Ensure the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-balance-for-energy-account"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/{accountId}/balance"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAB.0016": {
      "id": "T.EAB.0016",
      "title": "with pagination",
      "description": "",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-balances-for-energy"
        }
      ],
      "negative": true,
      "preConditions": [],
      "purpose": "",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/balances"
        }
      ],
      "assertions": []
    },
    "T.EAB.0017": {
      "id": "T.EAB.0017",
      "title": "without pagination ",
      "description": "",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-balances-for-energy"
        }
      ],
      "negative": true,
      "preConditions": [],
      "purpose": "",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/accounts/balances"
        }
      ],
      "assertions": []
    },
    "T.EAR.0001": {
      "id": "T.EAR.0001",
      "title": "ADR call to DH: Get Service Points - no pagination",
      "description": "Obtain a list of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-a8d4f7d2-e72e-4eb1-9d83-28ea616a2c62",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.EAR.0004",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0002": {
      "id": "T.EAR.0002",
      "title": "ADR call to DH: Get Service Points - with pagination",
      "description": "Obtain a paginated list of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-a8d4f7d2-e72e-4eb1-9d83-28ea616a2c62",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        "<page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.EAR.0004",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0003": {
      "id": "T.EAR.0003",
      "title": "ADR call to DH: Get Service Points - unsupported version without x-min-v included",
      "description": "DH call to SDH: Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0004": {
      "id": "T.EAR.0004",
      "title": "ADR call to DH: Get Service Points - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0005": {
      "id": "T.EAR.0005",
      "title": "ADR call to DH: Get Service Points - invalid FAPI Interaction ID format ",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAR.0006": {
      "id": "T.EAR.0006",
      "title": "ADR call to DH: Get Service Point Detail ",
      "description": "Obtain the details of a service point owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-f9fc2c7c-db2b-444d-9340-a317884f3bdc",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {servicePointId} is set in the Path ",
        "AND value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with a vaild service point and version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.EAR.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0007": {
      "id": "T.EAR.0007",
      "title": "ADR call to DH: Get Service Point Detail - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the value for <x-v> is in a valid  format"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0008": {
      "id": "T.EAR.0008",
      "title": "ADR call to DH: Get Service Point Detail - invalid format of Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is invalid"
      ],
      "purpose": "Test API with an invalid servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.EAR.0002",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0009": {
      "id": "T.EAR.0009",
      "title": "ADR call to DH: Get Service Point Detail - unavailable Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.EAR.0003",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0010": {
      "id": "T.EAR.0010",
      "title": "ADR call to DH: Get Service Point Detail - invalid FAPI Interaction ID format ",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAR.0011": {
      "id": "T.EAR.0011",
      "title": "ADR call to DH: Get Usage for Service Point Detail - no pagination",
      "description": "Obtain a list of electricity usage data from a particular service point owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAR.0005",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0012": {
      "id": "T.EAR.0012",
      "title": "ADR call to DH: Get Usage for Service Points - with pagination",
      "description": "Obtain a paginated list of electricity usage data from a particular service point owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-8365f6ba-ed9b-4e43-87a1-a54d9d49b8e1",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAR.0005",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0013": {
      "id": "T.EAR.0013",
      "title": "ADR call to DH: Get Usage for Service Points - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0014": {
      "id": "T.EAR.0014",
      "title": "ADR call to DH: Get Usage for Service Points - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0015": {
      "id": "T.EAR.0015",
      "title": "ADR call to DH: Get Usage for Service Points - oldest date",
      "description": "Obtain a list of electricity usage data constrained by oldest date from a particular service point owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#common-field-types"
        }
      ],
      "negative": true,
      "preConditions": [
        " <oldest-date> query parameters is provided",
        "AND <oldest-date> is a valid DateTime string"
      ],
      "purpose": "Test API with <oldest date> parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAR.0005",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0027"
      ]
    },
    "T.EAR.0016": {
      "id": "T.EAR.0016",
      "title": "ADR call to DH: Get Usage for Service Points - newest date",
      "description": "Obtain a list of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": true,
      "preConditions": [
        "<newest-date> query parameter is provided",
        "AND <newest-date> is a valid DateTime string"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAR.0005",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0029"
      ]
    },
    "T.EAR.0017": {
      "id": "T.EAR.0017",
      "title": "ADR call to DH: Get Usage for Service Points - invalid Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is invalid"
      ],
      "purpose": "Test API with an invalid servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAR.0002",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0018": {
      "id": "T.EAR.0018",
      "title": "ADR call to DH: Get Usage for Service Points - unavailable Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAR.0003",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0019": {
      "id": "T.EAR.0019",
      "title": "ADR call to DH: Get Usage for Service Points - invalid format oldest date ",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API with <oldest date>  parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0028"
      ]
    },
    "T.EAR.0020": {
      "id": "T.EAR.0020",
      "title": "ADR call to DH: Get Usage for Service Points - invalid format newest date",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0030"
      ]
    },
    "T.EAR.0021": {
      "id": "T.EAR.0021",
      "title": "ADR call to DH: Get Usage For Service Point - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAR.0022": {
      "id": "T.EAR.0022",
      "title": "ADR call to DH: Get Usage for Specific Service Points - no pagination",
      "description": "Obtain the electricity usage data for a specific set of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0006",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0023": {
      "id": "T.EAR.0023",
      "title": "ADR call to DH: Get Usage for Specific Service Points - with pagination",
      "description": "Obtain the electricity usage data for a specific set of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-e9c11ed2-1fe4-448b-b474-b233c27d5767",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0006",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0024": {
      "id": "T.EAR.0024",
      "title": "ADR call to DH: Get Usage for Specific Service Points - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0025": {
      "id": "T.EAR.0025",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0026": {
      "id": "T.EAR.0026",
      "title": "ADR call to DH: Get Usage for Specific Service Points - oldest date",
      "description": "Obtain the electricity usage data for a specific set of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": true,
      "preConditions": [
        " <oldest-date> query parameters is provided"
      ],
      "purpose": "Test API with oldest date parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0006",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0027"
      ]
    },
    "T.EAR.0027": {
      "id": "T.EAR.0027",
      "title": "ADR call to DH: Get Usage for Specific Service Points - newest date",
      "description": "Obtain the electricity usage data for a specific set of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": true,
      "preConditions": [
        "<newest-date> query parameter is provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0006",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0029"
      ]
    },
    "T.EAR.0028": {
      "id": "T.EAR.0028",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid format oldest date ",
      "description": "Ensure the endpoint returns oldest-date compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API with oldest date parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0028"
      ]
    },
    "T.EAR.0029": {
      "id": "T.EAR.0029",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid format newest date",
      "description": "Ensure the endpoint returns newest-date compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0030"
      ]
    },
    "T.EAR.0030": {
      "id": "T.EAR.0030",
      "title": "ADR call to DH: Get Usage For Specific Service Points - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAR.0031": {
      "id": "T.EAR.0031",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid body values",
      "description": "Ensure that the endpoint returns body compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The request body is correctly formatted",
        "AND request payload has missing or invalid values"
      ],
      "purpose": "Test API with invalid body values",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0032": {
      "id": "T.EAR.0032",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid body format",
      "description": "Ensure that the endpoint returns body compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The body is incorrectly formatted"
      ],
      "purpose": "Test API with a malformed body",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0031"
      ]
    },
    "T.EAR.0033": {
      "id": "T.EAR.0033",
      "title": "ADR call to DH: Get DER for Service Point ",
      "description": "Obtain a list of DER data from a particular service point owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-c008a5a9-00a7-4144-85a0-6832e23f837a",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {servicePointId} is set in the Path ",
        "AND value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with a vaild service point and version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.EAR.0007",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0034": {
      "id": "T.EAR.0034",
      "title": "ADR call to DH: Get Service Point Detail - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the value for <x-v> is in a valid  format"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0035": {
      "id": "T.EAR.0035",
      "title": "ADR call to DH: Get Service Point Detail - invalid format of Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <{servicePointId}> is set in the Path to a value that is "
      ],
      "purpose": "Test API with an invalid servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.EAR.0002",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0036": {
      "id": "T.EAR.0036",
      "title": "ADR call to DH: Get Service Point Detail - unavailable Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.EAR.0003",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0037": {
      "id": "T.EAR.0037",
      "title": "ADR call to DH: Get DER for Service Point - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAR.0038": {
      "id": "T.EAR.0038",
      "title": "ADR call to DH: Get DER for Specific Service Points - no pagination",
      "description": "Obtain DER data for a specific set of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.EAR.0008",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0039": {
      "id": "T.EAR.0039",
      "title": "ADR call to DH: Get DER for Specific Service Points - with pagination",
      "description": "Obtain DER data for a specific set of service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-3d96d13a-360d-4930-a46c-6cb0c2450a86",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.EAR.0008",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0040": {
      "id": "T.EAR.0040",
      "title": "ADR call to DH: Get DER for Specific Service Points - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the value for <x-v> is in a valid  format"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0041": {
      "id": "T.EAR.0041",
      "title": "ADR call to DH: Get DER for Specific Service Points - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0042": {
      "id": "T.EAR.0042",
      "title": "ADR call to DH: Get DER for Specific Service Points - invalid body values",
      "description": "Ensure that the endpoint returns body compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The request body is correctly formatted",
        "AND request payload has missing or invalid values"
      ],
      "purpose": "Test API with invalid body values",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.EAR.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0043": {
      "id": "T.EAR.0043",
      "title": "ADR call to DH: Get DER for Specific Service Points - invalid body format",
      "description": "Ensure that the endpoint returns body compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The body is incorrectly formatted"
      ],
      "purpose": "Test API with a malformed body",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0031"
      ]
    },
    "T.EAR.0044": {
      "id": "T.EAR.0044",
      "title": "ADR call to DH: Get DER For Specific Service Points - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAR.0045": {
      "id": "T.EAR.0045",
      "title": "ADR call to DH: Get Bulk Usage ",
      "description": "Obtain the electricity usage data for all service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-c4624ec7-7ef3-4dbd-b1a1-c1d63a020346",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0010",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0046": {
      "id": "T.EAR.0046",
      "title": "ADR call to DH: Get Bulk Usage - with pagination",
      "description": "Obtain the electricity usage data for all service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0010",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0047": {
      "id": "T.EAR.0047",
      "title": "ADR call to DH: Get Bulk Usage - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0048": {
      "id": "T.EAR.0048",
      "title": "ADR call to DH: Get Bulk Usage - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0049": {
      "id": "T.EAR.0049",
      "title": "ADR call to DH: Get Bulk Usage - oldest date",
      "description": "Obtain the electricity usage data for all service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": true,
      "preConditions": [
        " <oldest-date> query parameters is provided"
      ],
      "purpose": "Test API with oldest date parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0010",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0027"
      ]
    },
    "T.EAR.0050": {
      "id": "T.EAR.0050",
      "title": "ADR call to DH: Get Bulk Usage - newest date",
      "description": "Obtain the electricity usage data for all service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": true,
      "preConditions": [
        "<newest-date> query parameter is provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAR.0010",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0029"
      ]
    },
    "T.EAR.0051": {
      "id": "T.EAR.0051",
      "title": "ADR call to DH: Get Bulk Usage - invalid format oldest date ",
      "description": "Ensure the endpoint returns oldest-date compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API with an invalid oldest date parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0028"
      ]
    },
    "T.EAR.0052": {
      "id": "T.EAR.0052",
      "title": "ADR call to DH: Get Bulk Usage - invalid format newest date",
      "description": "Ensure the endpoint returns newest-date compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API with an invalid newest date parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0030"
      ]
    },
    "T.EAR.0053": {
      "id": "T.EAR.0053",
      "title": "ADR call to DH: Get Bulk Usage - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAR.0054": {
      "id": "T.EAR.0054",
      "title": "ADR call to DH: Get Bulk Usage - missing FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAR.0055": {
      "id": "T.EAR.0055",
      "title": "ADR call to DH: Get Bulk Usage - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0056": {
      "id": "T.EAR.0056",
      "title": "ADR call to DH: Get Bulk Usage - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0057": {
      "id": "T.EAR.0057",
      "title": "ADR call to DH: Get Bulk Usage - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0058": {
      "id": "T.EAR.0058",
      "title": "ADR call to DH: Get Bulk Usage - missing CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAR.0059": {
      "id": "T.EAR.0059",
      "title": "ADR call to DH: Get Bulk Usage - invalid CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAR.0060": {
      "id": "T.EAR.0060",
      "title": "ADR call to DH: Get Bulk DER ",
      "description": "Obtain the electricity usage data for all service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.EAR.0011",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0061": {
      "id": "T.EAR.0061",
      "title": "ADR call to DH: Get Bulk DER - with pagination",
      "description": "Obtain the electricity usage data for all service points owned by the consumer that has authorised the current session",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-1aee91c2-9186-47d1-b15c-1996c49b3259",
          "alt": "Postman Example"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.EAR.0011",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0062": {
      "id": "T.EAR.0062",
      "title": "ADR call to DH: Get Bulk DER - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0063": {
      "id": "T.EAR.0063",
      "title": "ADR call to DH: Get Bulk DER - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0064": {
      "id": "T.EAR.0064",
      "title": "ADR call to DH: Get Bulk DER - missing FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAR.0065": {
      "id": "T.EAR.0065",
      "title": "ADR call to DH: DHGet Bulk DER - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0066": {
      "id": "T.EAR.0066",
      "title": "ADR call to DH: Get Bulk DER - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0067": {
      "id": "T.EAR.0067",
      "title": "ADR call to DH: DH: Get Bulk DER - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0068": {
      "id": "T.EAR.0068",
      "title": "ADR call to DH: Get Bulk DER - missing CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAR.0069": {
      "id": "T.EAR.0069",
      "title": "ADR call to DH: Get Bulk DER - invalid CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAR.0070": {
      "id": "T.EAR.0070",
      "title": "ADR call to DH: Get Bulk DER - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0071": {
      "id": "T.EAR.0071",
      "title": "ADR call to DH: Get Bulk DER - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0072": {
      "id": "T.EAR.0072",
      "title": "ADR call to DH: Get Bulk DER - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0073": {
      "id": "T.EAR.0073",
      "title": "ADR call to DH: Get Service Points - missing FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAR.0074": {
      "id": "T.EAR.0074",
      "title": "ADR call to DH: Get Service Points - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0075": {
      "id": "T.EAR.0075",
      "title": "ADR call to DH: Get Service Points - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0076": {
      "id": "T.EAR.0076",
      "title": "ADR call to DH: Get Service Points - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0077": {
      "id": "T.EAR.0077",
      "title": "ADR call to DH: Get Service Points - missing CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAR.0078": {
      "id": "T.EAR.0078",
      "title": "ADR call to DH: Get Service Points - invalid CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAR.0079": {
      "id": "T.EAR.0079",
      "title": "ADR call to DH: Get Service Point - missing FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAR.0080": {
      "id": "T.EAR.0080",
      "title": "ADR call to DH: Get Service Point - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0081": {
      "id": "T.EAR.0081",
      "title": "ADR call to DH: Get Service Point - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0082": {
      "id": "T.EAR.0082",
      "title": "ADR call to DH: Get Service Point - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0083": {
      "id": "T.EAR.0083",
      "title": "ADR call to DH: Get Service Point - missing CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAR.0084": {
      "id": "T.EAR.0084",
      "title": "ADR call to DH: Get Service Point - invalid CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAR.0085": {
      "id": "T.EAR.0085",
      "title": "ADR call to DH: Get Usage For Service Point - missing FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAR.0086": {
      "id": "T.EAR.0086",
      "title": "ADR call to DH: Get Usage For Service Point - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0087": {
      "id": "T.EAR.0087",
      "title": "ADR call to DH: Get Usage For Service Point - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0088": {
      "id": "T.EAR.0088",
      "title": "ADR call to DH: Get Usage For Service Point - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0089": {
      "id": "T.EAR.0089",
      "title": "ADR call to DH: Get Usage For Service Point - missing CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAR.0090": {
      "id": "T.EAR.0090",
      "title": "ADR call to DH: Get Usage For Service Point - invalid CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAR.0091": {
      "id": "T.EAR.0091",
      "title": "ADR call to DH: Get Usage for Specific Service Points - missing FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAR.0092": {
      "id": "T.EAR.0092",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0093": {
      "id": "T.EAR.0093",
      "title": "ADR call to DH: Get Usage for Specific Service Points - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0094": {
      "id": "T.EAR.0094",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0095": {
      "id": "T.EAR.0095",
      "title": "ADR call to DH: Get Usage for Specific Service Points - missing CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAR.0096": {
      "id": "T.EAR.0096",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAR.0097": {
      "id": "T.EAR.0097",
      "title": "ADR call to DH: Get DER for Service Point - missing FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAR.0098": {
      "id": "T.EAR.0098",
      "title": "ADR call to DH: Get DER for Service Point - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0099": {
      "id": "T.EAR.0099",
      "title": "ADR call to DH: Get DER for Service Point - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0100": {
      "id": "T.EAR.0100",
      "title": "ADR call to DH: Get DER for Service Point - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0101": {
      "id": "T.EAR.0101",
      "title": "ADR call to DH: Get DER for Service Point - missing CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAR.0102": {
      "id": "T.EAR.0102",
      "title": "ADR call to DH: Get DER for Service Point - invalid CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAR.0103": {
      "id": "T.EAR.0103",
      "title": "ADR call to DH: Get DER For Specific Service Points - missing FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> is not present in the header"
      ],
      "purpose": "Test API when FAPI Auth date is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0016"
      ]
    },
    "T.EAR.0104": {
      "id": "T.EAR.0104",
      "title": "ADR call to DH: Get DER For Specific Service Points - invalid FAPI Auth Date",
      "description": "Ensure that the endpoint returns FAPI Auth date errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-auth-date> format is invalid"
      ],
      "purpose": "Test API when FAPI Auth date is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0017"
      ]
    },
    "T.EAR.0105": {
      "id": "T.EAR.0105",
      "title": "ADR call to DH: Get DER For Specific Service Points - missing FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  is not present in the header"
      ],
      "purpose": "Test API when FAPI Customer IP Address is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0019"
      ]
    },
    "T.EAR.0106": {
      "id": "T.EAR.0106",
      "title": "ADR call to DH: Get DER For Specific Service Points - invalid FAPI Customer IP Address",
      "description": "Ensure that the endpoint returns FAPI Customer IP address errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-customer-ip-address>  format is invalid"
      ],
      "purpose": "Test API when FAPI Customer IP Address is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0020"
      ]
    },
    "T.EAR.0107": {
      "id": "T.EAR.0107",
      "title": "ADR call to DH: Get DER For Specific Service Points - missing CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> is not present in the header"
      ],
      "purpose": "Test API when CDS Client Header is missing from the header",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0022"
      ]
    },
    "T.EAR.0108": {
      "id": "T.EAR.0108",
      "title": "ADR call to DH: Get DER For Specific Service Points - invalid CDS Client Header",
      "description": "Ensure that the endpoint returns CDS Client Header errors ",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-client-header> format is invalid"
      ],
      "purpose": "Test API when CDS Client Header is present but the format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0014",
        "A.ZAA.0023"
      ]
    },
    "T.EAR.0109": {
      "id": "T.EAR.0109",
      "title": "ADR call to DH: Get Service Points - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        },
        {
          "uri": "https://www.postman.com/winter-shadow-541400/workspace/dsb-schema-tests/request/8286723-7db0a312-af47-452a-8a44-d4002b3c71e8",
          "alt": "Postman Example"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0110": {
      "id": "T.EAR.0110",
      "title": "ADR call to DH: Get Service Points - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0111": {
      "id": "T.EAR.0111",
      "title": "ADR call to DH: Get Service Point - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0112": {
      "id": "T.EAR.0112",
      "title": "ADR call to DH: Get Service Point - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0113": {
      "id": "T.EAR.0113",
      "title": "ADR call to DH: Get Usage For Service Point - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0114": {
      "id": "T.EAR.0114",
      "title": "ADR call to DH: Get Usage For Service Point - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0115": {
      "id": "T.EAR.0115",
      "title": "ADR call to DH: Get Bulk Usage - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0116": {
      "id": "T.EAR.0116",
      "title": "ADR call to DH: Get Bulk Usage - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0117": {
      "id": "T.EAR.0117",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0118": {
      "id": "T.EAR.0118",
      "title": "ADR call to DH: Get Usage for Specific Service Points - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0119": {
      "id": "T.EAR.0119",
      "title": "ADR call to DH: Get DER for Service Point - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0120": {
      "id": "T.EAR.0120",
      "title": "ADR call to DH: Get DER for Service Point - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0121": {
      "id": "T.EAR.0121",
      "title": "ADR call to DH: Get Bulk DER - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0122": {
      "id": "T.EAR.0122",
      "title": "ADR call to DH: Get Bulk DER - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0123": {
      "id": "T.EAR.0123",
      "title": "ADR call to DH: Get DER For Specific Service Points - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0124": {
      "id": "T.EAR.0124",
      "title": "ADR call to DH: Get DER For Specific Service Points - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0125": {
      "id": "T.EAR.0125",
      "title": "ADR call to DH: Get Service Points - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0126": {
      "id": "T.EAR.0126",
      "title": "ADR call to DH: Get Service Point - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0127": {
      "id": "T.EAR.0127",
      "title": "ADR call to DH: Get Usage For Service Point - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0128": {
      "id": "T.EAR.0128",
      "title": "ADR call to DH: Get Bulk Usage - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0129": {
      "id": "T.EAR.0129",
      "title": "ADR call to DH: Get Usage for Specific Service Points - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0130": {
      "id": "T.EAR.0130",
      "title": "ADR call to DH: Get DER for Service Point - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0131": {
      "id": "T.EAR.0131",
      "title": "ADR call to DH: Get Bulk DER - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0132": {
      "id": "T.EAR.0132",
      "title": "ADR call to DH: Get DER For Specific Service Points - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0133": {
      "id": "T.EAR.0133",
      "title": "ADR call to DH: Get Service Points - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0134": {
      "id": "T.EAR.0134",
      "title": "ADR call to DH: Get Service Point Detail - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0135": {
      "id": "T.EAR.0135",
      "title": "ADR call to DH: Get Usage for Service Point - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0136": {
      "id": "T.EAR.0136",
      "title": "ADR call to DH: Get Bulk Usage - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-usage"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0137": {
      "id": "T.EAR.0137",
      "title": "ADR call to DH: Get Usage For Specific Service Points - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0138": {
      "id": "T.EAR.0138",
      "title": "ADR call to DH: Get DER For Service Point - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0139": {
      "id": "T.EAR.0139",
      "title": "ADR call to DH: Get Bulk DER - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-bulk-der"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAR.0140": {
      "id": "T.EAR.0140",
      "title": "ADR call to DH: Get DER For Specific Service Points - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAS.0001": {
      "id": "T.EAS.0001",
      "title": "DH call to SDH: Get Service Points - no pagination",
      "description": "Obtain a list of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.EAS.0004",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0002": {
      "id": "T.EAS.0002",
      "title": "DH call to SDH: Get Service Points - with pagination",
      "description": "Obtain a paginated list of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.EAS.0004",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0003": {
      "id": "T.EAS.0003",
      "title": "DH call to SDH: Get Service Points - unsupported version without x-min-v included",
      "description": "DH call to SDH: Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version",
        "AND the value for <x-v> is in a valid  format not supported by the DH"
      ],
      "purpose": "Test API with a version that is not supported by the DH ",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0004": {
      "id": "T.EAS.0004",
      "title": "DH call to SDH: Get Service Points - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0005": {
      "id": "T.EAS.0005",
      "title": "DH call to SDH: Get Service Point Detail ",
      "description": "Obtain the details of a service point requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {servicePointId} is set in the Path ",
        "AND value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with a vaild service point and version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.EAS.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0006": {
      "id": "T.EAS.0006",
      "title": "DH call to SDH: Get Service Point Detail - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH",
        "AND the value for <x-v> is in a valid  format"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0007": {
      "id": "T.EAS.0007",
      "title": "DH call to SDH: Get Service Point Detail - invalid format of Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <{servicePointId}> is set in the Path to a value that is invalid"
      ],
      "purpose": "Test API with an invalid servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.EAS.0002",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0008": {
      "id": "T.EAS.0008",
      "title": "DH call to SDH: Get Service Point Detail - unavailable Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.EAS.0003",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0009": {
      "id": "T.EAS.0009",
      "title": "DH call to SDH: Get Usage for Service Point Detail - no pagination",
      "description": "Obtain a list of electricity usage data from a particular service point requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAS.0005",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0010": {
      "id": "T.EAS.0010",
      "title": "DH call to SDH: Get Usage for Service Points - with pagination",
      "description": "Obtain a paginated list of electricity usage data from a particular service requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAS.0005",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0011": {
      "id": "T.EAS.0011",
      "title": "DH call to SDH: Get Usage for Service Points - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH",
        "AND the value for <x-v> is in a valid  format"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0012": {
      "id": "T.EAS.0012",
      "title": "DH call to SDH: Get Usage for Service Points - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0013": {
      "id": "T.EAS.0013",
      "title": "DH call to SDH: Get Usage for Service Points - oldest date",
      "description": "Obtain a list of electricity usage data constrained by oldest date from a particular service point requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        },
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#common-field-types"
        }
      ],
      "negative": true,
      "preConditions": [
        " <oldest-date> query parameters is provided",
        "AND <oldest-date> is a valid DateTime string"
      ],
      "purpose": "Test API with <oldest date> parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAS.0005",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024",
        "A.ZAA.0027"
      ]
    },
    "T.EAS.0014": {
      "id": "T.EAS.0014",
      "title": "DH call to SDH: Get Usage for Service Points - newest date",
      "description": "Obtain a list of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "<newest-date> query parameter is provided",
        "AND <newest-date> is a valid DateTime string"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAS.0005",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024",
        "A.ZAA.0029"
      ]
    },
    "T.EAS.0015": {
      "id": "T.EAS.0015",
      "title": "DH call to SDH: Get Usage for Service Points - invalid Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is invalid"
      ],
      "purpose": "Test API with an invalid servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAS.0002",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0016": {
      "id": "T.EAS.0016",
      "title": "DH call to SDH: Get Usage for Service Points - unavailable Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.EAS.0003",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0017": {
      "id": "T.EAS.0017",
      "title": "DH call to SDH: Get Usage for Service Points - invalid format oldest date ",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API with <oldest date>  parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0028"
      ]
    },
    "T.EAS.0018": {
      "id": "T.EAS.0018",
      "title": "DH call to SDH: Get Usage for Service Points - invalid format newest date",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0030"
      ]
    },
    "T.EAS.0019": {
      "id": "T.EAS.0019",
      "title": "DH call to SDH: Get Usage for Specific Service Points - no pagination",
      "description": "Obtain the electricity usage data for a specific set of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAS.0006",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0020": {
      "id": "T.EAS.0020",
      "title": "DH call to SDH: Get Usage for Specific Service Points - with pagination",
      "description": "Obtain the electricity usage data for a specific set of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAS.0006",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0021": {
      "id": "T.EAS.0021",
      "title": "DH call to SDH: Get Usage for Specific Service Points - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The value <x-v> is set in the request header to a version not supported by the DH",
        "AND the value for <x-v> is in a valid  format"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0022": {
      "id": "T.EAS.0022",
      "title": "DH call to SDH: Get Usage for Specific Service Points - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0023": {
      "id": "T.EAS.0023",
      "title": "DH call to SDH: Get Usage for Specific Service Points - oldest date",
      "description": "Obtain the electricity usage data for a specific set of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        " <oldest-date> query parameters is provided"
      ],
      "purpose": "Test API with oldest date parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAS.0006",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024",
        "A.ZAA.0027"
      ]
    },
    "T.EAS.0024": {
      "id": "T.EAS.0024",
      "title": "DH call to SDH: Get Usage for Specific Service Points - newest date",
      "description": "Obtain the electricity usage data for a specific set of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "<newest-date> query parameter is provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAS.0006",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024",
        "A.ZAA.0029"
      ]
    },
    "T.EAS.0025": {
      "id": "T.EAS.0025",
      "title": "DH call to SDH: Get Usage for Specific Service Points - invalid format oldest date ",
      "description": "Ensure the endpoint returns oldest-date compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API with oldest date parameter",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0028"
      ]
    },
    "T.EAS.0026": {
      "id": "T.EAS.0026",
      "title": "DH call to SDH: Get Usage for Specific Service Points - invalid format newest date",
      "description": "Ensure the endpoint returns newest-date compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0030"
      ]
    },
    "T.EAS.0027": {
      "id": "T.EAS.0027",
      "title": "DH call to SDH: Get DER for Service Point ",
      "description": "Obtain a list of DER data from a particular service point requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {servicePointId} is set in the Path ",
        "AND value <x-v> is set in the request header to a version supported by the DH"
      ],
      "purpose": "Test API with a vaild service point and version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.EAS.0007",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0028": {
      "id": "T.EAS.0028",
      "title": "DH call to SDH: Get Service Point Detail - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the value for <x-v> is in a valid  format"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0029": {
      "id": "T.EAS.0029",
      "title": "DH call to SDH: Get Service Point Detail - invalid format of Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <{servicePointId}> is set in the Path to a value that is "
      ],
      "purpose": "Test API with an invalid servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.EAS.0002",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0030": {
      "id": "T.EAS.0030",
      "title": "DH call to SDH: Get Service Point Detail - unavailable Service Point ID",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The {servicePointId} is set in the Path to a value that is unavailable"
      ],
      "purpose": "Test API with an unavailable servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.EAS.0003",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0031": {
      "id": "T.EAS.0031",
      "title": "DH call to SDH: Get DER for Specific Service Points - no pagination",
      "description": "Obtain DER data for a specific set of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "Neither <page-size> or <page> query parameters are provided"
      ],
      "purpose": "Test API without any pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.EAS.0008",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0032": {
      "id": "T.EAS.0032",
      "title": "DH call to SDH: Get DER for Specific Service Points - with pagination",
      "description": "Obtain DER data for a specific set of service points requested by the DH",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        " <page-size> and<page> query parameters are provided"
      ],
      "purpose": "Test API with pagination partameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.EAS.0008",
        "A.ZAA.0001",
        "A.ZAA.0006",
        "A.ZAA.0011",
        "A.ZAA.0013",
        "A.ZAA.0018",
        "A.ZAA.0021",
        "A.ZAA.0024"
      ]
    },
    "T.EAS.0033": {
      "id": "T.EAS.0033",
      "title": "DH call to SDH: Get DER for Specific Service Points - unsupported version without x-min-v included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the value for <x-v> is in a valid  format"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0034": {
      "id": "T.EAS.0034",
      "title": "DH call to SDH: Get DER for Specific Service Points - invalid page parameters",
      "description": "Ensure that the endpoint returns pagination errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<page> OR (<page> ",
        "AND <page-size>) query parameters are provided"
      ],
      "purpose": "Test API with invalid pagination parameters",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0002",
        "A.ZAA.0003",
        "A.ZAA.0004",
        "A.ZAA.0005",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0035": {
      "id": "T.EAS.0035",
      "title": "DH call to SDH: Get DER for Specific Service Points - invalid body values",
      "description": "Ensure that the endpoint returns body compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The request body is correctly formatted",
        "AND request payload has missing or invalid values"
      ],
      "purpose": "Test API with invalid body values",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.EAS.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0036": {
      "id": "T.EAS.0036",
      "title": "DH call to SDH: Get DER for Specific Service Points - invalid body format",
      "description": "Ensure that the endpoint returns body compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The body is incorrectly formatted"
      ],
      "purpose": "Test API with a malformed body",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0031"
      ]
    },
    "T.EAS.0037": {
      "id": "T.EAS.0037",
      "title": "DH call to SDH: Get Usage for Specific Service Points - invalid body values",
      "description": "Ensure that the endpoint returns body compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The request body is correctly formatted",
        "AND request payload has missing or invalid values"
      ],
      "purpose": "Test API with invalid body values",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.EAS.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0038": {
      "id": "T.EAS.0038",
      "title": "DH call to SDH: Get Usage for Specific Service Points - invalid body format",
      "description": "Ensure that the endpoint returns body compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The body is incorrectly formatted"
      ],
      "purpose": "Test API with a malformed body",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0031"
      ]
    },
    "T.EAS.0039": {
      "id": "T.EAS.0039",
      "title": "DH call to SDH: Get Service Points - invalid FAPI Interaction ID format ",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID format is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAS.0040": {
      "id": "T.EAS.0040",
      "title": "DH call to SDH: Get Service Point Detail - invalid FAPI Interaction ID format ",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAS.0041": {
      "id": "T.EAS.0041",
      "title": "DH call to SDH: Get Usage For Service Point - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAS.0042": {
      "id": "T.EAS.0042",
      "title": "DH call to SDH: Get Usage For Specific Service Points - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAS.0043": {
      "id": "T.EAS.0043",
      "title": "DH call to SDH: Get DER for Service Point - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAS.0044": {
      "id": "T.EAS.0044",
      "title": "DH call to SDH: Get DER For Specific Service Points - invalid FAPI Interaction ID format",
      "description": "Ensure that the endpoint returns FAPI Interaction ID errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-fapi-interaction-id> format is invalid "
      ],
      "purpose": "Test API where FAPI Interaction ID fomat is invalid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0015"
      ]
    },
    "T.EAS.0045": {
      "id": "T.EAS.0045",
      "title": "DH call to SDH: Get Service Points - no arragement id ",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is missing "
      ],
      "purpose": "Test API to ensure the arrangement ID is included ",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0025"
      ]
    },
    "T.EAS.0046": {
      "id": "T.EAS.0046",
      "title": "DH call to SDH: Get Service Points - arrangement ID invalid",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is present but invalid"
      ],
      "purpose": "Test API to ensure the arrangement ID is valid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0026"
      ]
    },
    "T.EAS.0047": {
      "id": "T.EAS.0047",
      "title": "DH call to SDH: Get Service Point Detail - no arragement id ",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is missing "
      ],
      "purpose": "Test API to ensure the arrangement ID is included ",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0025"
      ]
    },
    "T.EAS.0048": {
      "id": "T.EAS.0048",
      "title": "DH call to SDH: Get Service Point Detail - arrangement ID invalid",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is present but invalid"
      ],
      "purpose": "Test API to ensure the arrangement ID is valid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0026"
      ]
    },
    "T.EAS.0049": {
      "id": "T.EAS.0049",
      "title": "DH call to Get Usage For Service Point - no arragement id ",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is missing "
      ],
      "purpose": "Test API to ensure the arrangement ID is included ",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0025"
      ]
    },
    "T.EAS.0050": {
      "id": "T.EAS.0050",
      "title": "DH call to SDH: Get Usage For Service Point - arrangement ID invalid",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is present but invalid"
      ],
      "purpose": "Test API to ensure the arrangement ID is valid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0026"
      ]
    },
    "T.EAS.0051": {
      "id": "T.EAS.0051",
      "title": "DH call to SDH: Get Usage For Specific Service Points - no arragement id ",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is missing "
      ],
      "purpose": "Test API to ensure the arrangement ID is included ",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0025"
      ]
    },
    "T.EAS.0052": {
      "id": "T.EAS.0052",
      "title": "DH call to SDH: Get Usage For Specific Service Points - arrangement ID invalid",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is present but invalid"
      ],
      "purpose": "Test API to ensure the arrangement ID is valid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0026"
      ]
    },
    "T.EAS.0053": {
      "id": "T.EAS.0053",
      "title": "DH call to SDH: Get DER for Service Point - no arragement id ",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is missing "
      ],
      "purpose": "Test API to ensure the arrangement ID is included ",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0025"
      ]
    },
    "T.EAS.0054": {
      "id": "T.EAS.0054",
      "title": "DH call to SDH: Get DER for Service Point - arrangement ID invalid",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is present but invalid"
      ],
      "purpose": "Test API to ensure the arrangement ID is valid",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0026"
      ]
    },
    "T.EAS.0055": {
      "id": "T.EAS.0055",
      "title": "DH call to Get DER For Specific Service Points - no arragement id ",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is missing "
      ],
      "purpose": "Test API to ensure the arrangement ID is included ",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0025"
      ]
    },
    "T.EAS.0056": {
      "id": "T.EAS.0056",
      "title": "DH call to SDH: Get DER For Specific Service Points - arrangement ID invalid",
      "description": "Ensure that the endpoint returns arrangement id errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-cds-arrangement> is present but invalid"
      ],
      "purpose": "Test API to ensure the arrangement ID is valid",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0013",
        "A.ZAA.0026"
      ]
    },
    "T.EAS.0057": {
      "id": "T.EAS.0057",
      "title": "DH call to SDH: Get Service Points - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0058": {
      "id": "T.EAS.0058",
      "title": "DH call to SDH: Get Service Points - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0059": {
      "id": "T.EAS.0059",
      "title": "DH call to SDH: Get Service Point Detail - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0060": {
      "id": "T.EAS.0060",
      "title": "DH call to SDH: Get Service Point Detail - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0061": {
      "id": "T.EAS.0061",
      "title": "DH call to SDH: Get Usage For Service Point - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0062": {
      "id": "T.EAS.0062",
      "title": "DH call to SDH: Get Usage For Service Point - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0063": {
      "id": "T.EAS.0063",
      "title": "DH call to SDH: Get Usage For Specific Service Points - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0064": {
      "id": "T.EAS.0064",
      "title": "DH call to SDH: Get Usage For Specific Service Points - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0065": {
      "id": "T.EAS.0065",
      "title": "DH call to SDH: Get DER for Service Point - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0066": {
      "id": "T.EAS.0066",
      "title": "DH call to SDH: Get DER for Service Point - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0067": {
      "id": "T.EAS.0067",
      "title": "DH call to SDH: Get DER For Specific Service Points - invalid version value",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> version is not a valid number"
      ],
      "purpose": "Test API with invalid version value",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0007",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0068": {
      "id": "T.EAS.0068",
      "title": "DH call to SDH: Get DER For Specific Service Points - invalid version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "The <x-v> format is not valid "
      ],
      "purpose": "Test API with invalid version format",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0008",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0069": {
      "id": "T.EAS.0069",
      "title": "DH call to SDH: Get Service Points - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0070": {
      "id": "T.EAS.0070",
      "title": "DH call to SDH: Get Service Point Detail - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0071": {
      "id": "T.EAS.0071",
      "title": "DH call to SDH: Get Usage for Service Points - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0072": {
      "id": "T.EAS.0072",
      "title": "DH call to SDH: Get Usage for Specific Service Points - unsupported version when x-min-v  is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0073": {
      "id": "T.EAS.0073",
      "title": "DH call to SDH: Get Service Point Detail - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0074": {
      "id": "T.EAS.0074",
      "title": "DH call to SDH: Get DER for Specific Service Points - unsupported version when x-min-v is included",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "the value <x-v> is set in the request header to a version not supported by the DH",
        "AND the <x-min-v> is included"
      ],
      "purpose": "Test API with a version that is not supported by the DH",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0010",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0075": {
      "id": "T.EAS.0075",
      "title": "DH call to SDH: Get Service Points - missing servicePointId in body",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {servicePointId} in the body is missing"
      ],
      "purpose": "Test API with a missing servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.EAS.0009",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0076": {
      "id": "T.EAS.0076",
      "title": "DH call to SDH: Get Service Points - invalid servicePointId in body",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {servicePointId} in the body is invalid"
      ],
      "purpose": "Test API with an invalid servicePointId ",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.EAS.0010",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0077": {
      "id": "T.EAS.0077",
      "title": "DH call to SDH: Get Service Points - unavailable servicePointId in body",
      "description": "Ensure the endpoint returns servicePointId compatible errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": true,
      "preConditions": [
        "The {servicePointId} in the body is unavailable"
      ],
      "purpose": "Test API with an unavailable servicePointId",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.EAS.0011",
        "A.ZAA.0013"
      ]
    },
    "T.EAS.0078": {
      "id": "T.EAS.0078",
      "title": "DH call to SDH: Get Service Points - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAS.0079": {
      "id": "T.EAS.0079",
      "title": "DH call to SDH: Get Service Point Detail - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-point-detail-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAS.0080": {
      "id": "T.EAS.0080",
      "title": "DH call to SDH: Get Usage for Service Point - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAS.0081": {
      "id": "T.EAS.0081",
      "title": "DH call to SDH: Get Usage For Specific Service Points - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-usage-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/usage"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAS.0082": {
      "id": "T.EAS.0082",
      "title": "DH call to SDH: Get DER For Service Point - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-service-point-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "GET /secondary/energy/electricity/servicepoints/{servicePointId}/der"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    },
    "T.EAS.0083": {
      "id": "T.EAS.0083",
      "title": "DH call to SDH: Get DER For Specific Service Points - invalid minimum version format",
      "description": "Ensure that the endpoint returns version compatibility errors",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-der-for-specific-service-points-sr"
        }
      ],
      "negative": false,
      "preConditions": [
        "<x-min-v> is included",
        "AND <x-min-v> is not an integer"
      ],
      "purpose": "Test invalid format for minimum version",
      "steps": [
        {
          "type": "ACTION",
          "action": "POST /secondary/energy/electricity/servicepoints/der"
        }
      ],
      "assertions": [
        "A.ZAA.0012",
        "A.ZAA.0013",
        "A.ZAA.0014"
      ]
    }
  },
  "scenarios": {
    "S.CAA.0035": {
      "id": "S.CAA.0035",
      "title": "Get status v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.CAA.0001"
        }
      ]
    },
    "S.CAA.0036": {
      "id": "S.CAA.0036",
      "title": "Get status Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.CAA.0002"
        },
        {
          "type": "TEST",
          "testCase": "T.CAA.0003"
        },
        {
          "type": "TEST",
          "testCase": "T.CAA.0004"
        },
        {
          "type": "TEST",
          "testCase": "T.CAA.0005"
        },
        {
          "type": "TEST",
          "testCase": "T.CAA.0006"
        }
      ]
    },
    "S.CAA.0037": {
      "id": "S.CAA.0037",
      "title": "Get outages v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.CAA.0007"
        }
      ]
    },
    "S.CAA.0038": {
      "id": "S.CAA.0038",
      "title": "Get outages Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.CAA.0008"
        },
        {
          "type": "TEST",
          "testCase": "T.CAA.0009"
        },
        {
          "type": "TEST",
          "testCase": "T.CAA.0010"
        },
        {
          "type": "TEST",
          "testCase": "T.CAA.0011"
        },
        {
          "type": "TEST",
          "testCase": "T.CAA.0012"
        }
      ]
    },
    "S.CAC.0039": {
      "id": "S.CAC.0039",
      "title": "Get customer v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.CAC.0001"
        }
      ]
    },
    "S.CAC.0040": {
      "id": "S.CAC.0040",
      "title": "Get customer Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.CAC.0002"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0003"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0004"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0005"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0006"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0007"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0008"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0009"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0010"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0011"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0012"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0013"
        }
      ]
    },
    "S.CAC.0041": {
      "id": "S.CAC.0041",
      "title": "Get customer detail v2",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.CAC.0014"
        }
      ]
    },
    "S.CAC.0042": {
      "id": "S.CAC.0042",
      "title": "Get customer detail Negative v2",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.CAC.0015"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0016"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0017"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0018"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0019"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0020"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0021"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0022"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0023"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0024"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0025"
        },
        {
          "type": "TEST",
          "testCase": "T.CAC.0026"
        }
      ]
    },
    "S.EAA.0047": {
      "id": "S.EAA.0047",
      "title": "Get Energy Accounts v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAA.0001"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0002"
        }
      ]
    },
    "S.EAA.0048": {
      "id": "S.EAA.0048",
      "title": "Get Energy Accounts Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAA.0003"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0004"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0005"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0006"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0007"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0008"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0009"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0010"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0011"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0012"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0013"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0014"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0057"
        }
      ]
    },
    "S.EAA.0049": {
      "id": "S.EAA.0049",
      "title": "Get Energy Account Detail v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAA.0015"
        }
      ]
    },
    "S.EAA.0050": {
      "id": "S.EAA.0050",
      "title": "Get Energy Account Detail Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAA.0016"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0017"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0018"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0019"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0020"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0021"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0022"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0023"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0024"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0025"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0026"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0027"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0028"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0058"
        }
      ]
    },
    "S.EAA.0051": {
      "id": "S.EAA.0051",
      "title": "Get Agreed Payment Schedule v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAA.0029"
        }
      ]
    },
    "S.EAA.0052": {
      "id": "S.EAA.0052",
      "title": "Get Agreed Payment Schedule Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAA.0030"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0031"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0032"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0033"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0034"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0035"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0036"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0037"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0038"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0039"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0040"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0041"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0042"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0059"
        }
      ]
    },
    "S.EAA.0053": {
      "id": "S.EAA.0053",
      "title": "Get Concessions v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAA.0043"
        }
      ]
    },
    "S.EAA.0054": {
      "id": "S.EAA.0054",
      "title": "Get Concessions Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAA.0044"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0045"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0046"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0047"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0048"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0049"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0050"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0051"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0052"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0053"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0054"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0055"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0056"
        },
        {
          "type": "TEST",
          "testCase": "T.EAA.0060"
        }
      ]
    },
    "S.EAR.0073": {
      "id": "S.EAR.0073",
      "title": "Get Service Points v1",
      "purpose": "Test cases which will return a 2xx status code",
      "description": "",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "sequence": [
        {
          "type": "SETUP",
          "action": "Authorise session\nAND x-v is set in header"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0001"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0002"
        }
      ]
    },
    "S.EAR.0074": {
      "id": "S.EAR.0074",
      "title": "Get Service Points Negative v1",
      "purpose": "Test cases which will return codes other than 2xx",
      "description": "",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points"
        }
      ],
      "sequence": [
        {
          "type": "SETUP",
          "action": "Authorise session"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0003"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0004"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0005"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0073"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0074"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0075"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0076"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0077"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0078"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0109"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0110"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0125"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0133"
        }
      ]
    },
    "S.EAR.0075": {
      "id": "S.EAR.0075",
      "title": "Get Service Point Detail v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0006"
        }
      ]
    },
    "S.EAR.0076": {
      "id": "S.EAR.0076",
      "title": "Get Service Point Detail Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0007"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0008"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0009"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0010"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0079"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0080"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0081"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0082"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0083"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0084"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0111"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0112"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0126"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0134"
        }
      ]
    },
    "S.EAR.0077": {
      "id": "S.EAR.0077",
      "title": "Get Usage For Service Point v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0011"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0012"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0015"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0016"
        }
      ]
    },
    "S.EAR.0078": {
      "id": "S.EAR.0078",
      "title": "Get Usage For Service Point Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0013"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0014"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0017"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0018"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0019"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0020"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0021"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0085"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0086"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0087"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0088"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0089"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0090"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0113"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0114"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0127"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0135"
        }
      ]
    },
    "S.EAR.0079": {
      "id": "S.EAR.0079",
      "title": "Get Bulk Usage v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0045"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0046"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0049"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0050"
        }
      ]
    },
    "S.EAR.0080": {
      "id": "S.EAR.0080",
      "title": "Get Bulk Usage Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0047"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0048"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0051"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0052"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0053"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0054"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0055"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0056"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0057"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0058"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0059"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0115"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0116"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0128"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0136"
        }
      ]
    },
    "S.EAR.0081": {
      "id": "S.EAR.0081",
      "title": "Get Usage For Specific Service Points v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0022"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0023"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0026"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0027"
        }
      ]
    },
    "S.EAR.0082": {
      "id": "S.EAR.0082",
      "title": "Get Usage For Specific Service Points Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0024"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0025"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0028"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0029"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0030"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0031"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0032"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0091"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0092"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0093"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0094"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0095"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0096"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0117"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0118"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0129"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0137"
        }
      ]
    },
    "S.EAR.0083": {
      "id": "S.EAR.0083",
      "title": "Get DER for Service Point v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0033"
        }
      ]
    },
    "S.EAR.0084": {
      "id": "S.EAR.0084",
      "title": "Get DER for Service Point Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0034"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0035"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0036"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0037"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0097"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0098"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0099"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0100"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0101"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0102"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0119"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0120"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0130"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0138"
        }
      ]
    },
    "S.EAR.0085": {
      "id": "S.EAR.0085",
      "title": "Get Bulk DER v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0060"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0061"
        }
      ]
    },
    "S.EAR.0086": {
      "id": "S.EAR.0086",
      "title": "Get Bulk DER Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0062"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0063"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0064"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0065"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0066"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0067"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0068"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0069"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0070"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0071"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0072"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0121"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0122"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0131"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0139"
        }
      ]
    },
    "S.EAR.0087": {
      "id": "S.EAR.0087",
      "title": "Get DER For Specific Service Points v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0038"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0039"
        }
      ]
    },
    "S.EAR.0088": {
      "id": "S.EAR.0088",
      "title": "Get DER For Specific Service Points Negative v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAR.0040"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0041"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0042"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0043"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0044"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0103"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0104"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0105"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0106"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0107"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0108"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0123"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0124"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0132"
        },
        {
          "type": "TEST",
          "testCase": "T.EAR.0140"
        }
      ]
    },
    "S.EAS.0089": {
      "id": "S.EAS.0089",
      "title": "Get Service Points SR v1",
      "purpose": "",
      "description": "",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0001"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0002"
        }
      ]
    },
    "S.EAS.0090": {
      "id": "S.EAS.0090",
      "title": "Get Service Points Negative SR v1",
      "purpose": "",
      "description": "",
      "references": [
        {
          "uri": "https://consumerdatastandardsaustralia.github.io/standards/#get-service-points-sr"
        }
      ],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0003"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0004"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0039"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0045"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0046"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0057"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0058"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0069"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0075"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0076"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0077"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0078"
        }
      ]
    },
    "S.EAS.0091": {
      "id": "S.EAS.0091",
      "title": "Get Service Point Detail SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0005"
        }
      ]
    },
    "S.EAS.0092": {
      "id": "S.EAS.0092",
      "title": "Get Service Point Detail Negative SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0006"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0007"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0008"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0040"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0047"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0048"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0059"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0060"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0070"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0079"
        }
      ]
    },
    "S.EAS.0093": {
      "id": "S.EAS.0093",
      "title": "Get Usage For Service Point SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0009"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0010"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0014"
        }
      ]
    },
    "S.EAS.0094": {
      "id": "S.EAS.0094",
      "title": "Get Usage For Service Point Negative SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0011"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0012"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0013"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0015"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0016"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0017"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0018"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0041"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0049"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0050"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0061"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0062"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0071"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0080"
        }
      ]
    },
    "S.EAS.0095": {
      "id": "S.EAS.0095",
      "title": "Get Usage For Specific Service Points SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0019"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0020"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0023"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0024"
        }
      ]
    },
    "S.EAS.0096": {
      "id": "S.EAS.0096",
      "title": "Get Usage For Specific Service Points Negative SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0021"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0022"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0025"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0026"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0037"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0038"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0042"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0051"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0052"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0063"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0064"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0072"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0081"
        }
      ]
    },
    "S.EAS.0097": {
      "id": "S.EAS.0097",
      "title": "Get DER for Service Point SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0027"
        }
      ]
    },
    "S.EAS.0098": {
      "id": "S.EAS.0098",
      "title": "Get DER for Service Point Negative SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0028"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0029"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0030"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0043"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0053"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0054"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0065"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0066"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0073"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0082"
        }
      ]
    },
    "S.EAS.0099": {
      "id": "S.EAS.0099",
      "title": "Get DER For Specific Service Points SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0031"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0032"
        }
      ]
    },
    "S.EAS.0100": {
      "id": "S.EAS.0100",
      "title": "Get DER For Specific Service Points Negative SR v1",
      "purpose": "",
      "description": "",
      "references": [],
      "sequence": [
        {
          "type": "TEST",
          "testCase": "T.EAS.0033"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0034"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0035"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0036"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0044"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0055"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0056"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0067"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0068"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0074"
        },
        {
          "type": "TEST",
          "testCase": "T.EAS.0083"
        }
      ]
    }
  },
  "suites": {
    "SUITE.CAA": {
      "id": "SUITE.CAA",
      "title": "APIs - Common Admin",
      "purpose": "",
      "scenarios": [
        "S.CAA.0035",
        "S.CAA.0036",
        "S.CAA.0037",
        "S.CAA.0038"
      ]
    },
    "SUITE.CAC": {
      "id": "SUITE.CAC",
      "title": "APIs - Common Customer",
      "purpose": "",
      "scenarios": [
        "S.CAC.0039",
        "S.CAC.0040",
        "S.CAC.0041",
        "S.CAC.0042"
      ]
    },
    "SUITE.EAA": {
      "id": "SUITE.EAA",
      "title": "APIs - Energy Accounts",
      "purpose": "",
      "scenarios": [
        "S.EAA.0047",
        "S.EAA.0048",
        "S.EAA.0049",
        "S.EAA.0050",
        "S.EAA.0051",
        "S.EAA.0052",
        "S.EAA.0053",
        "S.EAA.0054"
      ]
    },
    "SUITE.EAR": {
      "id": "SUITE.EAR",
      "title": "APIs - Energy Standing Data, Usage and DER",
      "purpose": "",
      "scenarios": [
        "S.EAR.0073",
        "S.EAR.0074",
        "S.EAR.0075",
        "S.EAR.0076",
        "S.EAR.0077",
        "S.EAR.0078",
        "S.EAR.0079",
        "S.EAR.0080",
        "S.EAR.0081",
        "S.EAR.0082",
        "S.EAR.0083",
        "S.EAR.0084",
        "S.EAR.0085",
        "S.EAR.0086",
        "S.EAR.0087",
        "S.EAR.0088"
      ]
    },
    "SUITE.EAS": {
      "id": "SUITE.EAS",
      "title": "APIs - Energy Standing Data, Usage and DER SR",
      "purpose": "",
      "scenarios": [
        "S.EAS.0089",
        "S.EAS.0090",
        "S.EAS.0091",
        "S.EAS.0092",
        "S.EAS.0093",
        "S.EAS.0094",
        "S.EAS.0095",
        "S.EAS.0096",
        "S.EAS.0097",
        "S.EAS.0098",
        "S.EAS.0099",
        "S.EAS.0100"
      ]
    }
  }
}